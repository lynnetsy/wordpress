version: '3.9'

services:

  proxy:
    container_name: 'proxy'
    image: jwilder/nginx-proxy
    restart: always
    ports:
    - 80:80
    networks:
    - wpNet
    volumes:
    - /var/run/docker.sock:/tmp/docker.sock:ro
    - ./docker/proxy/vhost:/etc/nginx/vhost.d
    - ./docker/proxy/html:/usr/share/nginx/html
    - ./docker/proxy/dhparam:/etc/nginx/dhparam
    - ./docker/proxy/conf:/etc/nginx/conf.d

  letsencrypt:
    container_name: 'letsencrypt'
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - ./docker/letsencrypt/certs:/etc/nginx/certs:rw
    - ./docker/letsencrypt/acme:/etc/acme.sh
    volumes_from:
    - proxy:rw
    networks:
    - wpNet

  wordpress:
    container_name: 'wordpress'
    image: wordpress:5.8.2-apache
    restart: always
    environment:
    - WORDPRESS_DB_HOST=wp_mysql
    - WORDPRESS_DB_USER=${DB_USER}
    - WORDPRESS_DB_PASSWORD=${DB_PASSWORD}
    - WORDPRESS_DB_NAME=${DB_NAME}
    - VIRTUAL_HOST=${WP_VHOST}
    - LETSENCRYPT_HOST=${WP_VHOST}
    - LETSENCRYPT_EMAIL=${WP_VHOST_EMAIL}
    volumes:
    - ./app:/var/www/html
    networks:
    - wpNet

  
  wp_mysql:
    container_name: 'wp_mysql'
    image: mysql:8
    restart: always
    environment:
    - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    - MYSQL_DATABASE=${DB_NAME}
    - MYSQL_USER=${DB_USER}
    - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
    - 3306:3306
    volumes:
    - wpDbVol:/var/lib/mysql
    - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
    - wpNet
      
    
networks:
  wpNet:
    driver: bridge

volumes:
  wpDbVol:
    driver: local

